#!/usr/bin/perl
use warnings;
use strict;
use Getopt::Long;
use Pod::Usage;
use Time::Piece;
my $NGS_PIPELINE="/projects/Clinomics/Tools/ngs_pipeline/";
my $mode = 'd';
my $dataDir="/projects/Clinomics/DATA/";
my $workDir="";
my $help;
GetOptions(
		'mode=s'      =>\$mode,
		'datadir=s'   =>\$dataDir,
		'workdir=s'   =>\$workDir,
		'help|h'      =>\$help,
	  )or pod2usage();

$help and pod2usage ();

if (!$mode){
	print STDERR "ERROR: must specify '-mode'\n";
	print STDERR "\t Possible values are:\n";
	print STDERR "\t\td (development) Default\n";
	print STDERR "\t\tp (production)\n";
	exit;
}
if (!$dataDir){
        print STDERR "On biowulf the raw data is stored in /data/khanlab/projects/DATA/\n";
        print STDERR "On TGen the raw data is stored in /projects/Clinomics/DATA/\n";
	print STDERR "If your data is coming from somewhere else specify using this variable\n";
        exit;
}
if (!$workDir){
	print STDERR "On biowulf the development version is ran in /data/khanlab/projects/DATA/\n";
	print STDERR "This is set here specifically to run the dev mode in a test location\n";
	exit;
}
if (`hostname` =~ /cn/ or `hostname` =~ /biowulf.nih.gov/){
	$NGS_PIPELINE = "/data/khanlab/projects/patidar/ngs_pipeline/";
	`sbatch --export=time=$mode,dataDir=$dataDir,workDir=$workDir --cpus-per-task=1 --partition=ccr --time=96:00:00 $NGS_PIPELINE/submit_snakemake.sh`
}
elsif(`hostname` =~ /tghighmem/ or `hostname` =~ /tgcompute/ or `hostname` =~ /login01/){
	$NGS_PIPELINE = "/projects/Clinomics/Tools/ngs_pipeline/";
	`qsub -v time=$mode,dataDir=$dataDir,workDir=$workDir -l nodes=1:ppn=1,mem=1gb,walltime=96:00:00 $NGS_PIPELINE/submit_snakemake.sh`
}
else{
	print STDERR "This pipeline is not configured to run on this host `hostname`\n";
	print STDERR "Please change configuration files as well as Snakemake file to accomodate the same\n";
	die;
}
=head1 SYNOPSIS

 launch -mode d -datadir /data/Clinomics/DATA/ -workdir /projects/Clinomics/Test_Run2
 Usage:

        -h, -help, --help Print this message.

        -mode		This sets up the time in the patient directory, in production mode the time is dynamically decided, 
			  in dev mode a pre set time is used for debugging purposes.

	-datadir	On biowulf the raw data is stored in /data/khanlab/projects/DATA/
			  On TGen the raw data is stored in /data/Clinomics/DATA/
			  If your data is coming from somewhere else specify using this variable
			  -datadir "/data/Clinomics/testData/"

	-workdir	Working directory where all the results will be stored. there are defaults to be used specific to host.

	export TIME="20160415"
        if (`hostname` =~ /cn/ or `hostname` =~ /biowulf.nih.gov/){
                module use /data/khanlab/apps/Modules
                module load python/3.4.3
                export NGS_PIPELINE="/data/khanlab/projects/patidar/ngs_pipeline/"
                export WORK_DIR="/data/khanlab/projects/DNASeq/"
                export DATA_DIR="/data/khanlab/projects/DATA/"
                export ACT_DIR="/Actionable/"
                export HOST="biowulf.nih.gov"
                SNAKEFILE=$NGS_PIPELINE/ngs_pipeline.snakefile
                SAM_CONFIG=$WORK_DIR/samplesheet.json
        elsif(`hostname` =~ /tghighmem/ or `hostname` =~ /tgcompute/ or `hostname` =~ /login01/){
                module load python/3.4.3
                module load snakemake
                export NGS_PIPELINE="/projects/Clinomics/Tools/ngs_pipeline/"
                export WORK_DIR="/projects/Clinomics/Test_Run3/"
                export DATA_DIR="/projects/Clinomics/DATA/"
                export ACT_DIR="/Actionable/"
                export HOST="login01"
                SNAKEFILE=$NGS_PIPELINE/ngs_pipeline.snakefile
                SAM_CONFIG=$WORK_DIR/samplesheet.json                                                                                           
        }
	#Summary 
	#  snakemake --directory $WORK_DIR --snakefile $SNAKEFILE --configfile $SAM_CONFIG --summary
	
	# DRY Run with Print out the shell commands that will be executed
	#  snakemake --directory $WORK_DIR --snakefile $SNAKEFILE --configfile $SAM_CONFIG --dryrun -p -r

	#DAG 
	#  snakemake --directory $WORK_DIR --snakefile $SNAKEFILE --configfile $SAM_CONFIG --dag | dot -Tpng > dag.png

	#Rulegraph
	#  snakemake --directory $WORK_DIR --snakefile $SNAKEFILE --configfile $SAM_CONFIG -n --forceall --rulegraph | dot -Tpng > Rulegraph.png

	# Mail Rulegraph and DAG to self#  echo DAG |mutt -s "DAG" -a dag.png -a rulegraph.png -- patidarr@mail.nih.gov
	#  echo DAG |mutt -s "DAG" -a dag.png -a Rulegraph.png -- patidarr@mail.nih.gov
	                                                                                                                      

 For questions or comments, please contact: Rajesh Patidar <rajesh.patidar@nih.gov>

=cut
